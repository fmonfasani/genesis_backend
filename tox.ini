# Tox configuration for Genesis Backend
# Test across multiple Python versions and environments

[tox]
envlist = 
    py{39,310,311,312}
    lint
    type
    security
    docs
    coverage-report
isolated_build = true
skip_missing_interpreters = true
minversion = 4.0

[gh-actions]
# GitHub Actions Python version mapping
python =
    3.9: py39
    3.10: py310
    3.11: py311, lint, type, security, docs
    3.12: py312

[testenv]
# Base test environment configuration
deps = 
    pytest>=7.0.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-xdist>=3.0.0
    httpx>=0.24.0
extras = test
setenv =
    PYTHONPATH = {toxinidir}/src
    GENESIS_ENV = testing
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands = 
    pytest {posargs:tests/} -v --cov=genesis_backend --cov-append --cov-report=term-missing

[testenv:py39]
# Python 3.9 specific configuration
deps = 
    {[testenv]deps}
    typing-extensions>=4.0.0  # Extra typing support for 3.9

[testenv:py310]
# Python 3.10 specific configuration
deps = {[testenv]deps}

[testenv:py311]
# Python 3.11 specific configuration (primary development version)
deps = {[testenv]deps}

[testenv:py312]
# Python 3.12 specific configuration
deps = {[testenv]deps}

[testenv:lint]
# Code linting environment
deps =
    flake8>=6.0.0
    flake8-docstrings>=1.7.0
    flake8-import-order>=0.18.2
    flake8-bugbear>=23.0.0
    pep8-naming>=0.13.0
skip_install = false
commands =
    flake8 src/ tests/ examples/

[testenv:format]
# Code formatting environment
deps =
    black>=23.0.0
    isort>=5.12.0
skip_install = true
commands =
    black src/ tests/ examples/
    isort src/ tests/ examples/

[testenv:format-check]
# Check code formatting
deps =
    black>=23.0.0
    isort>=5.12.0
skip_install = true
commands =
    black --check src/ tests/ examples/
    isort --check-only src/ tests/ examples/

[testenv:type]
# Type checking environment
deps =
    mypy>=1.0.0
    types-setuptools
    types-requests
skip_install = false
commands =
    mypy src/genesis_backend/

[testenv:security]
# Security scanning environment
deps =
    bandit[toml]>=1.7.0
    safety>=2.0.0
skip_install = false
commands =
    bandit -r src/ -f json -o {toxworkdir}/bandit-report.json
    safety check --json --output {toxworkdir}/safety-report.json

[testenv:docs]
# Documentation building environment
deps =
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.3.0
    myst-parser>=2.0.0
extras = docs
changedir = docs
commands =
    sphinx-build -W -b html . {toxworkdir}/docs

[testenv:coverage-report]
# Coverage reporting environment
deps = 
    coverage[toml]>=7.0.0
    pytest-cov>=4.0.0
skip_install = true
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
commands =
    coverage combine {toxworkdir}
    coverage report --show-missing --fail-under=80
    coverage html -d {toxworkdir}/htmlcov
    coverage xml -o {toxworkdir}/coverage.xml

[testenv:integration]
# Integration tests environment
deps = 
    {[testenv]deps}
    psycopg2-binary>=2.9.0
    redis>=4.0.0
    pymongo>=4.0.0
setenv =
    {[testenv]setenv}
    DATABASE_URL = postgresql://postgres:postgres@localhost:5432/genesis_test
    REDIS_URL = redis://localhost:6379/1
    MONGODB_URL = mongodb://localhost:27017/genesis_test
commands =
    pytest tests/test_integration.py -v --maxfail=5

[testenv:performance]
# Performance testing environment
deps =
    {[testenv]deps}
    pytest-benchmark>=4.0.0
    memory-profiler>=0.60.0
commands =
    pytest tests/test_integration.py::TestPerformanceIntegration -v --benchmark-only

[testenv:examples]
# Examples testing environment
deps = 
    {[testenv]deps}
changedir = examples
commands =
    python basic_usage.py

[testenv:build]
# Package building environment
deps =
    build>=0.10.0
    twine>=4.0.0
skip_install = true
commands =
    python -m build
    twine check dist/*

[testenv:clean]
# Clean environment
deps =
skip_install = true
allowlist_externals = 
    rm
    find
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf src/*.egg-info/
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete

[testenv:dev]
# Development environment
deps =
    {[testenv]deps}
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.0.0
    pre-commit>=3.0.0
extras = dev,test
commands =
    pre-commit install
    python -c "print('Development environment ready!')"

# Flake8 configuration
[flake8]
max-line-length = 88
extend-ignore = 
    E203  # Whitespace before ':'
    W503  # Line break before binary operator
    E501  # Line too long (handled by black)
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv
per-file-ignores =
    # Tests can have long lines and unused imports
    tests/*:E501,F401,F811
    # Examples can have unused imports
    examples/*:F401
    # Init files can have unused imports
    __init__.py:F401
import-order-style = google
application-import-names = genesis_backend

# Coverage configuration
[coverage:run]
source = genesis_backend
branch = true
omit = 
    */tests/*
    */test_*
    */.tox/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
